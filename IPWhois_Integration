from ipwhois import IPWhois
# The command demisto.command() holds the command sent from the user.
if demisto.command() == 'test-module':
    # This is the call made when pressing the integration test button.
    try:
        obj = IPWhois('8.8.8.8') #IPWhois for ipv4 and v6
        results = obj.lookup_rdap()
        if results:
            demisto.results('ok')
            sys.exit(0)
        else:
            demisto.results('error')
    except Exception as e:
        demisto.results(e)

if demisto.command() == 'fetch-incidents':
    demisto.setLastRun({'time': 'now'})
    lastRun = demisto.getLastRun()
    demisto.incidents([{"Name":"Incident #1"},{"Name":"Incident #2"}])
    sys.exit(0)
# You can use demisto.args()[argName] to get a specific arg. args are strings.
# You can use demisto.params()[paramName] to get a specific params.S
# Params are of the type given in the integration page creation.

if demisto.command() == 'long-running-execution':
  pass

if demisto.command() == 'ip':
    obj = IPWhois(demisto.args()['ip']) #IPWhois for ipv4 and v6
    results = obj.lookup_rdap()
    del results["entities"]
    del results["raw"]
    del results["nir"]
    del results['network']["notices"]
    del results['network']["events"]
    del results['network']["links"]
    del results['network']["remarks"]
    temp = []
    for key in results["objects"]:
        try:
            cso = results["objects"][key]["contact"]["address"][0]["value"]
        except:
            cso = "null"
        temp.append({key: cso})

    del results["objects"]
    results.update({"address" :temp})

    # command_results = CommandResults(
    #     outputs_prefix='IPWhois',
    #     outputs_key_field='IPWhois',
    #     readable_output=tableToMarkdown('BT Custom - IPWhois (Partner Contribution):', results),
    #     outputs = results

    # return_results(command_results)

    dbot_score = Common.DBotScore(
        indicator=demisto.args()['ip'],
        indicator_type=DBotScoreType.IP,
        integration_name='BT Custom - IPWhois',
        score=0,#Common.DBotScore.SUSPICIOUS
        reliability = "F - Reliability cannot be judged"
    )

    ip = Common.IP(
        ip=demisto.args()['ip'],
        asn=results['asn'],
        dbot_score=dbot_score
    )

    command_results = CommandResults(
        outputs_prefix='BT Custom - IPWhois',
        outputs_key_field='indicator',
        outputs=results,
        indicator=ip
    )

    return_results(command_results)
